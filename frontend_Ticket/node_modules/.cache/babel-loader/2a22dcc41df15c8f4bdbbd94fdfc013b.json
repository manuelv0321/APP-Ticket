{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\laragon\\\\www\\\\frontend_Ticket\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\laragon\\\\www\\\\frontend_Ticket\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\laragon\\\\www\\\\frontend_Ticket\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\laragon\\\\www\\\\frontend_Ticket\\\\src\\\\componentes\\\\Ticket\\\\Tickets.js\";\nimport React, { useEffect, useState, useContext, Fragment } from 'react'; // importar cliente axios\n\nimport clienteAxios from '../../config/axios';\nimport Cliente from '../clientes/Cliente';\nimport Spinner from '../layout/Spinner';\nimport { Link, withRouter } from 'react-router-dom'; // import el Context\n\nimport { CRMContext } from '../../context/CRMContext';\n\nfunction Tickets(props) {\n  // Trabajar con el state\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      clientes = _useState2[0],\n      guardarClientes = _useState2[1]; // utilizar valores del context\n  // use effect es similar a componentdidmount y willmount\n\n\n  useEffect(function () {\n    // Query a la API\n    var consultarAPI =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var clientesConsulta;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return clienteAxios.get('/clientes', {\n                  headers: {\n                    Authorization: \"Bearer \".concat(localStorage.getItem('token'))\n                  }\n                });\n\n              case 3:\n                clientesConsulta = _context.sent;\n                // colocar el resultado en el state\n                guardarClientes(clientesConsulta.data);\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n\n                // Error con authorizacion\n                if (_context.t0.response.status = 500) {\n                  props.history.push('/iniciar-sesion');\n                }\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 7]]);\n      }));\n\n      return function consultarAPI() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n  }, [clientes]); // Si el state esta como false\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Clientes\"), React.createElement(Link, {\n    to: \"/ticket/nuevo\",\n    className: \"btn btn-verde nvo-cliente\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-plus-circle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), \"Nuevo Ticket\"), React.createElement(\"ul\", {\n    className: \"listado-clientes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, clientes.map(function (cliente) {\n    return React.createElement(Cliente, {\n      key: cliente._id,\n      cliente: cliente,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    });\n  })));\n}\n\nexport default withRouter(Tickets);","map":{"version":3,"sources":["C:\\laragon\\www\\frontend_Ticket\\src\\componentes\\Ticket\\Tickets.js"],"names":["React","useEffect","useState","useContext","Fragment","clienteAxios","Cliente","Spinner","Link","withRouter","CRMContext","Tickets","props","clientes","guardarClientes","consultarAPI","get","headers","Authorization","localStorage","getItem","clientesConsulta","data","response","status","history","push","map","cliente","_id"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,EAAiDC,QAAjD,QAAiE,OAAjE,C,CAEA;;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC,C,CAEA;;AACA,SAASC,UAAT,QAA2B,0BAA3B;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACpB;AADoB,kBAGgBV,QAAQ,CAAC,EAAD,CAHxB;AAAA;AAAA,MAGbW,QAHa;AAAA,MAGHC,eAHG,kBAKpB;AAEA;;;AACAb,EAAAA,SAAS,CAAE,YAAM;AAGT;AACA,QAAMc,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEkBV,YAAY,CAACW,GAAb,CAAiB,WAAjB,EAA8B;AACzDC,kBAAAA,OAAO,EAAE;AACLC,oBAAAA,aAAa,mBAAaC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAb;AADR;AADgD,iBAA9B,CAFlB;;AAAA;AAEPC,gBAAAA,gBAFO;AAQb;AACAP,gBAAAA,eAAe,CAACO,gBAAgB,CAACC,IAAlB,CAAf;AATa;AAAA;;AAAA;AAAA;AAAA;;AAYb;AACA,oBAAG,YAAMC,QAAN,CAAeC,MAAf,GAAwB,GAA3B,EAAgC;AAC5BZ,kBAAAA,KAAK,CAACa,OAAN,CAAcC,IAAd,CAAmB,iBAAnB;AACH;;AAfY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAZX,YAAY;AAAA;AAAA;AAAA,OAAlB;AAoBP,GAxBQ,EAwBN,CAACF,QAAD,CAxBM,CAAT,CARoB,CAmCpB;;AAMA,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAII,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAE,eAAV;AAA2B,IAAA,SAAS,EAAC,2BAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,SAAS,EAAC,oBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,iBAJJ,EASG;AAAI,IAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMA,QAAQ,CAACc,GAAT,CAAa,UAAAC,OAAO;AAAA,WACjB,oBAAC,OAAD;AACI,MAAA,GAAG,EAAEA,OAAO,CAACC,GADjB;AAEI,MAAA,OAAO,EAAED,OAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADiB;AAAA,GAApB,CADN,CATH,CADJ;AAqBH;;AACD,eAAenB,UAAU,CAACE,OAAD,CAAzB","sourcesContent":["import React, { useEffect, useState, useContext, Fragment } from 'react';\r\n\r\n// importar cliente axios\r\nimport clienteAxios from '../../config/axios';\r\nimport Cliente from '../clientes/Cliente';\r\nimport Spinner from '../layout/Spinner';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\n// import el Context\r\nimport { CRMContext } from '../../context/CRMContext';\r\n\r\nfunction Tickets(props) {\r\n    // Trabajar con el state\r\n    // clientes = state,  guardarClientes = funcion para guardar el state\r\n    const [clientes, guardarClientes] = useState([]);\r\n\r\n    // utilizar valores del context\r\n\r\n    // use effect es similar a componentdidmount y willmount\r\n    useEffect( () => {\r\n\r\n        \r\n            // Query a la API\r\n            const consultarAPI = async () => {\r\n                try {\r\n                    const clientesConsulta = await clienteAxios.get('/clientes', {\r\n                        headers: {\r\n                            Authorization : `Bearer ${localStorage.getItem('token')}`\r\n                        }\r\n                    });\r\n    \r\n                    // colocar el resultado en el state\r\n                    guardarClientes(clientesConsulta.data);\r\n\r\n                } catch (error) {\r\n                    // Error con authorizacion\r\n                    if(error.response.status = 500) {\r\n                        props.history.push('/iniciar-sesion');\r\n                    }\r\n                }\r\n            }\r\n           \r\n       \r\n    }, [clientes] );\r\n\r\n\r\n    // Si el state esta como false\r\n \r\n\r\n   \r\n\r\n    \r\n    return (\r\n        <Fragment>\r\n        \r\n            <h2>Clientes</h2>\r\n\r\n            <Link to={\"/ticket/nuevo\"} className=\"btn btn-verde nvo-cliente\"> \r\n                <i className=\"fas fa-plus-circle\"></i>\r\n                Nuevo Ticket\r\n            </Link>\r\n\r\n           <ul className=\"listado-clientes\">\r\n                {clientes.map(cliente => (\r\n                    <Cliente \r\n                        key={cliente._id}\r\n                        cliente={cliente}\r\n                    />\r\n                ))}\r\n            </ul>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\nexport default withRouter(Tickets);"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\laragon\\\\www\\\\frontend_Ticket\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\laragon\\\\www\\\\frontend_Ticket\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\laragon\\\\www\\\\frontend_Ticket\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\laragon\\\\www\\\\frontend_Ticket\\\\src\\\\componentes\\\\Ticket\\\\Tickets.js\";\nimport React, { useEffect, useState, Fragment } from 'react'; // importar cliente axios\n\nimport clienteAxios from '../../config/axios';\nimport Swal from 'sweetalert2';\nimport { Link, withRouter } from 'react-router-dom';\nimport DataTable from 'react-data-table-component';\nimport nextId from \"react-id-generator\";\n\nfunction Tickets(props) {\n  // Trabajar con el state\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      clientes = _useState2[0],\n      guardarClientes = _useState2[1]; // use effect es similar a componentdidmount y willmount\n\n\n  useEffect(function () {\n    consultarAPI();\n  }, []);\n  var columna = [{\n    name: 'ID',\n    selector: 'id',\n    sortable: true\n  }, {\n    name: 'DATE',\n    selector: 'date',\n    sortable: true\n  }, {\n    name: 'SUBJECT',\n    selector: 'subject',\n    sortable: true\n  }, {\n    name: 'description',\n    selector: 'description',\n    sortable: true\n  }, {\n    name: 'action',\n    cell: function cell(id) {\n      return React.createElement(React.Fragment, null, React.createElement(Link, {\n        to: \"/Ticket/editar/\".concat(id),\n        className: \"btn btn-azul\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-pen-alt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), \"Editar Producto\"), \"\\xA0\\xA0\", React.createElement(\"span\", {\n        onClick: function onClick() {\n          return Finish(id);\n        },\n        className: \"btn btn-verde\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"F\"));\n    }\n  }];\n  /*const EditTicket = (id) => {\r\n      props.history.push('/iniciar-sesion');\r\n  };*/\n\n  var Finish = function Finish(id) {\n    Swal.fire({\n      title: '¿Estás seguro?',\n      text: \"Seguro quieres Finalizar este Ticket?\",\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Si, Finalizar',\n      cancelButtonText: 'No, Cancelar'\n    }).then(function (result) {\n      if (result.value) {\n        clienteAxios.post('/Ticket', id, {\n          headers: {\n            Authorization: \"Bearer \".concat(localStorage.getItem('token'))\n          }\n        }).then(function (res) {\n          console.log(res);\n\n          if (res.status === 200) {\n            Swal.fire('Eliminado', res.data.mensaje, 'success');\n            consultarAPI();\n          } else {\n            props.history.push('/iniciar-sesion');\n          }\n        });\n      }\n    });\n  }; // Query a la API\n\n\n  var consultarAPI =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var clientesConsulta;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return clienteAxios.get('/Ticket', {\n                headers: {\n                  Authorization: \"Bearer \".concat(localStorage.getItem('token'))\n                }\n              });\n\n            case 3:\n              clientesConsulta = _context.sent;\n              // colocar el resultado en el state\n              guardarClientes(clientesConsulta.data);\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n\n              // Error con authorizacion\n              if (_context.t0.response.status = 500) {\n                props.history.push('/iniciar-sesion');\n              }\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    }));\n\n    return function consultarAPI() {\n      return _ref.apply(this, arguments);\n    };\n  }(); // Si el state esta como false\n\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"Tickets\"), React.createElement(Link, {\n    to: \"/ticket/nuevo\",\n    className: \"btn btn-verde nvo-cliente\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-plus-circle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }), \"Nuevo Ticket\"), \"\\xA0\\xA0\\xA0\\xA0\", React.createElement(Link, {\n    to: \"/ticket/Report\",\n    className: \"btn btn-verde nvo-cliente\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-receipt\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }), \"Report\"), React.createElement(DataTable, {\n    columns: columna,\n    data: clientes,\n    title: \"Listado De Tickets\",\n    pagination: true,\n    key: nextId(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }));\n}\n\nexport default withRouter(Tickets);","map":{"version":3,"sources":["C:\\laragon\\www\\frontend_Ticket\\src\\componentes\\Ticket\\Tickets.js"],"names":["React","useEffect","useState","Fragment","clienteAxios","Swal","Link","withRouter","DataTable","nextId","Tickets","props","clientes","guardarClientes","consultarAPI","columna","name","selector","sortable","cell","id","Finish","fire","title","text","type","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","result","value","post","headers","Authorization","localStorage","getItem","res","console","log","status","data","mensaje","history","push","get","clientesConsulta","response"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, Fragment } from 'react';\r\n\r\n// importar cliente axios\r\nimport clienteAxios from '../../config/axios';\r\nimport Swal from 'sweetalert2';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport DataTable from 'react-data-table-component';\r\nimport nextId from \"react-id-generator\";\r\n\r\n\r\nfunction Tickets(props) {\r\n\r\n    // Trabajar con el state\r\n    // clientes = state,  guardarClientes = funcion para guardar el state\r\n    const [clientes, guardarClientes] = useState([]);\r\n\r\n    \r\n\r\n    // use effect es similar a componentdidmount y willmount\r\n    useEffect( () => {\r\n\r\n        consultarAPI();\r\n            \r\n           \r\n       \r\n    }, [] );\r\n\r\n   const columna = [\r\n       {\r\n        name: 'ID',\r\n        selector: 'id',\r\n        sortable: true\r\n       },\r\n       {\r\n        name: 'DATE',\r\n        selector: 'date',\r\n        sortable: true\r\n       },\r\n       {\r\n        name: 'SUBJECT',\r\n        selector: 'subject',\r\n        sortable: true\r\n       },\r\n       {\r\n        name: 'description',\r\n        selector: 'description',\r\n        sortable: true\r\n       },\r\n    \r\n       {\r\n        name: 'action',\r\n        cell: (id ) => (\r\n            <>\r\n          <Link to={`/Ticket/editar/${id}`} className=\"btn btn-azul\">\r\n                    <i className=\"fas fa-pen-alt\"></i>\r\n                    Editar Producto\r\n                </Link>&nbsp;&nbsp;\r\n\r\n            <span onClick={() => Finish(id)} className='btn btn-verde'>F</span>\r\n          </>\r\n        ),\r\n       }\r\n      \r\n   ] \r\n\r\n/*const EditTicket = (id) => {\r\n    props.history.push('/iniciar-sesion');\r\n};*/\r\n\r\n const Finish = (id) => {\r\n    Swal.fire({\r\n        title: '¿Estás seguro?',\r\n        text: \"Seguro quieres Finalizar este Ticket?\",\r\n        type: 'warning',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Si, Finalizar',\r\n        cancelButtonText : 'No, Cancelar'\r\n    }).then((result) => {\r\n        \r\n        if (result.value) {\r\n         \r\n             clienteAxios.post('/Ticket',id, {\r\n                headers: {\r\n                    Authorization : `Bearer ${localStorage.getItem('token')}`\r\n                }\r\n            }).then(res => {\r\n                console.log(res)\r\n                if(res.status === 200) {\r\n                    Swal.fire(\r\n                        'Eliminado',\r\n                        res.data.mensaje,\r\n                        'success'\r\n                    )\r\n                    consultarAPI();\r\n                }else{\r\n                    props.history.push('/iniciar-sesion');\r\n                }\r\n            })\r\n        }\r\n    })\r\n};\r\n// Query a la API\r\nconst consultarAPI = async () => {\r\n    try {\r\n        const clientesConsulta = await clienteAxios.get('/Ticket', {\r\n            headers: {\r\n                Authorization : `Bearer ${localStorage.getItem('token')}`\r\n            }\r\n        });\r\n\r\n        // colocar el resultado en el state\r\n        guardarClientes(clientesConsulta.data);\r\n\r\n    } catch (error) {\r\n        // Error con authorizacion\r\n        if(error.response.status = 500) {\r\n            props.history.push('/iniciar-sesion');\r\n        }\r\n    }\r\n}\r\n    // Si el state esta como false\r\n \r\n\r\n   \r\n\r\n    \r\n    return (\r\n        <Fragment>\r\n        \r\n            <h2>Tickets</h2>\r\n\r\n            <Link to={\"/ticket/nuevo\"} className=\"btn btn-verde nvo-cliente\"> \r\n                <i className=\"fas fa-plus-circle\"></i>\r\n                Nuevo Ticket\r\n            </Link>&nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n            <Link to={\"/ticket/Report\"} className=\"btn btn-verde nvo-cliente\"> \r\n                <i className=\"fas fa-receipt\"></i>\r\n                Report\r\n            </Link>\r\n\r\n            <DataTable\r\n                columns={columna}\r\n                data={clientes}\r\n                title='Listado De Tickets'\r\n                pagination\r\n                key={nextId()}\r\n            />\r\n           \r\n\r\n        </Fragment>\r\n    )\r\n}\r\nexport default withRouter(Tickets);"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from \"C:\\\\laragon\\\\www\\\\frontend_Ticket\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\laragon\\\\www\\\\frontend_Ticket\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"C:\\\\laragon\\\\www\\\\frontend_Ticket\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\laragon\\\\www\\\\frontend_Ticket\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\laragon\\\\www\\\\frontend_Ticket\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\laragon\\\\www\\\\frontend_Ticket\\\\src\\\\componentes\\\\auth\\\\NuevoUsuario.js\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport Swal from 'sweetalert2';\nimport { Link, withRouter } from 'react-router-dom';\nimport clienteAxios from '../../config/axios';\nimport DataTable from 'react-data-table-component';\nimport nextId from \"react-id-generator\";\n\nfunction NuevoUsuario(_ref) {\n  var history = _ref.history;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      usuarios = _useState2[0],\n      guardarUsuarios = _useState2[1];\n\n  useEffect(function () {\n    var token = localStorage.getItem('token', token); // Query a la API\n\n    var consultarAPI =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var clientesConsulta;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return clienteAxios.get('/clientes', {\n                  headers: {\n                    Authorization: \"Bearer \".concat(token)\n                  }\n                });\n\n              case 3:\n                clientesConsulta = _context.sent;\n                console.log(clientesConsulta); // colocar el resultado en el state\n\n                guardarUsuarios(clientesConsulta.data);\n                _context.next = 11;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](0);\n\n                // Error con authorizacion\n                if (_context.t0.response.status = 500) {\n                  history.push('/iniciar-sesion');\n                }\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 8]]);\n      }));\n\n      return function consultarAPI() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    consultarAPI();\n  }, []); // cliente = state, guardarcliente = funcion para guardar el state\n\n  var _useState3 = useState({\n    repeatpassword: '',\n    password: '',\n    username: '',\n    lastname: '',\n    name: ''\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      cliente = _useState4[0],\n      guardarCliente = _useState4[1]; // leer los datos del formulario\n\n\n  var actualizarState = function actualizarState(e) {\n    // Almacenar lo que el usuario escribe en el state\n    guardarCliente(_objectSpread({}, cliente, _defineProperty({}, e.target.name, e.target.value)));\n  }; // Añade en la REST API un cliente nuevo\n\n\n  var agregarCliente = function agregarCliente(e) {\n    e.preventDefault();\n\n    if (cliente.repeatpassword != cliente.password) {\n      Swal.fire({\n        type: 'error',\n        title: 'Hubo un error',\n        text: 'Password no coinciden'\n      });\n      return;\n    } // enviar petición\n\n    /*   clienteAxios.post('/Tickets', Ticket,{\r\n           headers: {\r\n               Authorization : `Bearer ${localStorage.getItem('token')}`\r\n           }\r\n       })\r\n           .then(res => {\r\n               // validar si hay errores de mongo \r\n               if(res.data ==='No Autenticado, no hay JWT') {\r\n                   Swal.fire({\r\n                       type: 'error',\r\n                       title: 'Hubo un error',\r\n                       text: 'Token expirado o no existe'\r\n                   })\r\n                   history.push('/iniciar-sesion');\r\n               } else {\r\n                   Swal.fire(\r\n                       'Se agregó el Cliente',\r\n                       res.data.mensaje,\r\n                       'success'\r\n                   )\r\n               }\r\n               // Redireccionar\r\n               history.push('/');\r\n           });*/\n\n  }; // Validar el formulario\n\n\n  var validarCliente = function validarCliente() {\n    // Destructuring\n    var repeatpassword = cliente.repeatpassword,\n        password = cliente.password,\n        username = cliente.username,\n        lastname = cliente.lastname,\n        name = cliente.name; // revisar que las propiedades del state tengan contenido\n\n    var valido = !repeatpassword.length || !password.length || !username.length || !lastname.length || !name.length; // return true o false\n\n    return valido;\n  }; //asignar usuario\n  // verificar si el usuario esta autenticado o no\n\n\n  if (localStorage.getItem('token') === '') {\n    history.push('/iniciar-sesion');\n  }\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      user = _useState6[0],\n      setuser = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      users = _useState8[0],\n      setUsers = _useState8[1];\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, \"Nuevo Usuario\"), React.createElement(\"form\", {\n    onSubmit: agregarCliente,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(\"legend\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, \"Llena todos los campos\"), React.createElement(\"div\", {\n    className: \"campo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, \"Name:\"), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Name\",\n    name: \"name\",\n    onChange: actualizarState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"campo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, \"Lastname:\"), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"lastname\",\n    name: \"lastname\",\n    onChange: actualizarState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"campo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, \"username:\"), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"username\",\n    name: \"username\",\n    onChange: actualizarState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"campo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, \"password:\"), React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"password\",\n    name: \"password\",\n    onChange: actualizarState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"campo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, \"repeat password:\"), React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"repeat password\",\n    name: \"repeatpassword\",\n    onChange: actualizarState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  })), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"enviar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-azul\",\n    value: \"Crear Usuario\",\n    disabled: validarCliente(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }))));\n} // HOC, es una función que toma un componente y retorna un nuevo componente\n\n\nexport default withRouter(NuevoUsuario);","map":{"version":3,"sources":["C:\\laragon\\www\\frontend_Ticket\\src\\componentes\\auth\\NuevoUsuario.js"],"names":["React","Fragment","useState","useEffect","Swal","Link","withRouter","clienteAxios","DataTable","nextId","NuevoUsuario","history","usuarios","guardarUsuarios","token","localStorage","getItem","consultarAPI","get","headers","Authorization","clientesConsulta","console","log","data","response","status","push","repeatpassword","password","username","lastname","name","cliente","guardarCliente","actualizarState","e","target","value","agregarCliente","preventDefault","fire","type","title","text","validarCliente","valido","length","user","setuser","users","setUsers"],"mappings":"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","sourcesContent":["import React, {Fragment, useState, useEffect} from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport clienteAxios from '../../config/axios';\r\nimport DataTable from 'react-data-table-component';\r\nimport nextId from \"react-id-generator\";\r\n\r\nfunction NuevoUsuario({history}){\r\n\r\n    const [ usuarios, guardarUsuarios ] = useState([]);\r\n\r\n    useEffect( () => {\r\n\r\n       let token = localStorage.getItem('token', token);\r\n            // Query a la API\r\n            const consultarAPI = async () => {\r\n               \r\n                try {\r\n                    const clientesConsulta = await clienteAxios.get('/clientes', {\r\n                        headers: {\r\n                            Authorization : `Bearer ${token}`\r\n                        }\r\n                    });\r\n                    \r\n                    console.log(clientesConsulta);\r\n                    // colocar el resultado en el state\r\n                    guardarUsuarios(clientesConsulta.data);\r\n                   \r\n\r\n                } catch (error) {\r\n                    // Error con authorizacion\r\n                    if(error.response.status = 500) {\r\n                       history.push('/iniciar-sesion');\r\n                    }\r\n                }\r\n            }\r\n            consultarAPI();\r\n        \r\n    }, [] );\r\n\r\n\r\n\r\n\r\n    // cliente = state, guardarcliente = funcion para guardar el state\r\n    const[cliente, guardarCliente] = useState({\r\n        repeatpassword: '',\r\n        password: '',\r\n        username : '',\r\n        lastname: '',\r\n        name: ''\r\n    });\r\n    \r\n\r\n    // leer los datos del formulario\r\n    const actualizarState = e => {\r\n        // Almacenar lo que el usuario escribe en el state\r\n        guardarCliente({\r\n            // obtener una copia del state actual\r\n            ...cliente, \r\n            [e.target.name] : e.target.value\r\n        })\r\n\r\n    }\r\n\r\n    // Añade en la REST API un cliente nuevo\r\n    const agregarCliente = e => {\r\n        e.preventDefault();\r\n\r\n\r\n       if(cliente.repeatpassword != cliente.password){\r\n\r\n        Swal.fire({\r\n            type: 'error',\r\n            title: 'Hubo un error',\r\n            text: 'Password no coinciden'\r\n        })\r\n            return;\r\n       }\r\n        // enviar petición\r\n     /*   clienteAxios.post('/Tickets', Ticket,{\r\n            headers: {\r\n                Authorization : `Bearer ${localStorage.getItem('token')}`\r\n            }\r\n        })\r\n            .then(res => {\r\n                // validar si hay errores de mongo \r\n                if(res.data ==='No Autenticado, no hay JWT') {\r\n                    Swal.fire({\r\n                        type: 'error',\r\n                        title: 'Hubo un error',\r\n                        text: 'Token expirado o no existe'\r\n                    })\r\n                    history.push('/iniciar-sesion');\r\n                } else {\r\n                    Swal.fire(\r\n                        'Se agregó el Cliente',\r\n                        res.data.mensaje,\r\n                        'success'\r\n                    )\r\n                }\r\n                // Redireccionar\r\n                history.push('/');\r\n            });*/\r\n    }\r\n\r\n    // Validar el formulario\r\n    const validarCliente = () => {\r\n        // Destructuring\r\n        const {repeatpassword, password, username, lastname, name} = cliente;\r\n\r\n        // revisar que las propiedades del state tengan contenido\r\n        let valido = !repeatpassword.length || !password.length || !username.length || !lastname.length || !name.length;\r\n\r\n        // return true o false\r\n        return valido;\r\n    }\r\n\r\n    //asignar usuario\r\n  \r\n\r\n    // verificar si el usuario esta autenticado o no\r\n    if(localStorage.getItem('token') ===''  ) {\r\n        history.push('/iniciar-sesion');\r\n    }\r\n\r\n    const [user, setuser] = useState(0);\r\n    const [users,setUsers] = useState([]);\r\n\r\n\r\n\r\n\r\n \r\n\r\n    return (\r\n\r\n\r\n        <Fragment>\r\n\r\n          \r\n\r\n            <h2>Nuevo Usuario</h2>\r\n            \r\n            <form\r\n                onSubmit={agregarCliente}\r\n            >\r\n                <legend>Llena todos los campos</legend>\r\n                <div className=\"campo\">\r\n                    <label>Name:</label>\r\n                    <input  type=\"text\" \r\n                            placeholder=\"Name\" \r\n                            name=\"name\"\r\n                            onChange={actualizarState}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"campo\">\r\n                    <label>Lastname:</label>\r\n                    <input type=\"text\" \r\n                          placeholder=\"lastname\" \r\n                          name=\"lastname\" \r\n                          onChange={actualizarState}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"campo\">\r\n                    <label>username:</label>\r\n                    <input type=\"text\" \r\n                          placeholder=\"username\" \r\n                          name=\"username\" \r\n                          onChange={actualizarState}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"campo\">\r\n                    <label>password:</label>\r\n                    <input type=\"password\" \r\n                          placeholder=\"password\" \r\n                          name=\"password\" \r\n                          onChange={actualizarState}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"campo\">\r\n                    <label>repeat password:</label>\r\n                    <input type=\"password\" \r\n                          placeholder=\"repeat password\" \r\n                          name=\"repeatpassword\" \r\n                          onChange={actualizarState}\r\n                    />\r\n                </div>\r\n\r\n\r\n                \r\n            \r\n\r\n                  \r\n\r\n                 \r\n                  \r\n                \r\n                <br/>\r\n\r\n                <div className=\"enviar\">\r\n                    <input \r\n                        type=\"submit\" \r\n                        className=\"btn btn-azul\" \r\n                        value=\"Crear Usuario\" \r\n                        disabled={ validarCliente() }\r\n                    />\r\n                </div>\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n// HOC, es una función que toma un componente y retorna un nuevo componente\r\nexport default  withRouter(NuevoUsuario);"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from \"C:\\\\laragon\\\\www\\\\frontend_Ticket\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\laragon\\\\www\\\\frontend_Ticket\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"C:\\\\laragon\\\\www\\\\frontend_Ticket\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\laragon\\\\www\\\\frontend_Ticket\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\laragon\\\\www\\\\frontend_Ticket\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\laragon\\\\www\\\\frontend_Ticket\\\\src\\\\componentes\\\\Ticket\\\\NuevoTicket.js\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport Swal from 'sweetalert2';\nimport { withRouter } from 'react-router-dom';\nimport clienteAxios from '../../config/axios';\n\nfunction NuevoTicket(_ref) {\n  var history = _ref.history;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      usuarios = _useState2[0],\n      guardarUsuarios = _useState2[1];\n\n  useEffect(function () {\n    var token = localStorage.getItem('token', token); // Query a la API\n\n    var consultarAPI =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var clientesConsulta;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return clienteAxios.get('/clientes', {\n                  headers: {\n                    Authorization: \"Bearer \".concat(token)\n                  }\n                });\n\n              case 3:\n                clientesConsulta = _context.sent;\n                // colocar el resultado en el state\n                guardarUsuarios(clientesConsulta.data);\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n\n                // Error con authorizacion\n                if (_context.t0.response.status = 500) {\n                  history.push('/iniciar-sesion');\n                }\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 7]]);\n      }));\n\n      return function consultarAPI() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    consultarAPI();\n  }, []); // cliente = state, guardarcliente = funcion para guardar el state\n\n  var _useState3 = useState({\n    Subject: '',\n    Description: '',\n    start: '',\n    dateend: ''\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      cliente = _useState4[0],\n      guardarCliente = _useState4[1]; // leer los datos del formulario\n\n\n  var actualizarState = function actualizarState(e) {\n    // Almacenar lo que el usuario escribe en el state\n    guardarCliente(_objectSpread({}, cliente, _defineProperty({}, e.target.name, e.target.value)));\n  }; // Añade en la REST API un cliente nuevo\n\n\n  var agregarCliente = function agregarCliente(e) {\n    e.preventDefault(); // enviar petición\n\n    clienteAxios.post('/clientes', cliente).then(function (res) {\n      // validar si hay errores de mongo \n      if (res.data.code === 11000) {\n        Swal.fire({\n          type: 'error',\n          title: 'Hubo un error',\n          text: 'Ese cliente ya esta registrado'\n        });\n      } else {\n        Swal.fire('Se agregó el Cliente', res.data.mensaje, 'success');\n      } // Redireccionar\n\n\n      history.push('/');\n    });\n  }; // Validar el formulario\n\n\n  var validarCliente = function validarCliente() {\n    // Destructuring\n    var Subject = cliente.Subject,\n        Description = cliente.Description,\n        start = cliente.start,\n        dateend = cliente.dateend,\n        user = cliente.user; // revisar que las propiedades del state tengan contenido\n\n    var valido = !Subject.length || !Description.length || !start.length || !dateend.length; // return true o false\n\n    return valido;\n  }; //asignar usuario\n\n\n  var asignar = function asignar(e) {\n    console.log(\"llego\");\n  }; // verificar si el usuario esta autenticado o no\n\n\n  if (localStorage.getItem('token') === '') {\n    history.push('/iniciar-sesion');\n  }\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      foodState = _useState6[0],\n      setFoodState = _useState6[1];\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"Nuevo Ticket\"), React.createElement(\"form\", {\n    onSubmit: agregarCliente,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(\"legend\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"Llena todos los campos\"), React.createElement(\"div\", {\n    className: \"campo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"Subject:\"), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Subject\",\n    name: \"Subject\",\n    onChange: actualizarState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"campo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"Description:\"), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Description\",\n    name: \"Description\",\n    onChange: actualizarState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"campo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, \"date start:\"), React.createElement(\"input\", {\n    type: \"date\",\n    placeholder: \"Empresa Cliente\",\n    name: \"start\",\n    onChange: actualizarState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"campo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \"date end:\"), React.createElement(\"input\", {\n    type: \"date\",\n    placeholder: \"Email Cliente\",\n    name: \"dateend\",\n    onChange: actualizarState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"campo left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, \"Usuario:\"), React.createElement(\"select\", {\n    className: \"campo\",\n    name: \"user\",\n    value: \"\",\n    onChange: function onChange(e) {\n      var selectedFood = e.target.value;\n      setFoodState(selectedFood);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, \"Steak\"), React.createElement(\"option\", {\n    value: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, \"Sandwich\"), React.createElement(\"option\", {\n    value: \"3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, \"Dumpling\")), React.createElement(\"input\", {\n    className: \"right \",\n    type: \"submit\",\n    value: \"+\",\n    disabled: asignar(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"enviar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-azul\",\n    value: \"Crear Ticket\",\n    disabled: validarCliente(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }))));\n} // HOC, es una función que toma un componente y retorna un nuevo componente\n\n\nexport default withRouter(NuevoTicket);","map":{"version":3,"sources":["C:\\laragon\\www\\frontend_Ticket\\src\\componentes\\Ticket\\NuevoTicket.js"],"names":["React","Fragment","useState","useEffect","Swal","withRouter","clienteAxios","NuevoTicket","history","usuarios","guardarUsuarios","token","localStorage","getItem","consultarAPI","get","headers","Authorization","clientesConsulta","data","response","status","push","Subject","Description","start","dateend","cliente","guardarCliente","actualizarState","e","target","name","value","agregarCliente","preventDefault","post","then","res","code","fire","type","title","text","mensaje","validarCliente","user","valido","length","asignar","console","log","foodState","setFoodState","selectedFood"],"mappings":"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","sourcesContent":["import React, {Fragment, useState, useEffect} from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport { withRouter } from 'react-router-dom'; \r\nimport clienteAxios from '../../config/axios';\r\n\r\n\r\n\r\nfunction NuevoTicket({history}){\r\n\r\n    const [ usuarios, guardarUsuarios ] = useState([]);\r\n\r\n    useEffect( () => {\r\n\r\n       let token = localStorage.getItem('token', token);\r\n            // Query a la API\r\n            const consultarAPI = async () => {\r\n                try {\r\n                    const clientesConsulta = await clienteAxios.get('/clientes', {\r\n                        headers: {\r\n                            Authorization : `Bearer ${token}`\r\n                        }\r\n                    });\r\n    \r\n                    // colocar el resultado en el state\r\n                    guardarUsuarios(clientesConsulta.data);\r\n\r\n                } catch (error) {\r\n                    // Error con authorizacion\r\n                    if(error.response.status = 500) {\r\n                       history.push('/iniciar-sesion');\r\n                    }\r\n                }\r\n            }\r\n            consultarAPI();\r\n        \r\n    }, [] );\r\n\r\n\r\n   \r\n\r\n    // cliente = state, guardarcliente = funcion para guardar el state\r\n    const[cliente, guardarCliente] = useState({\r\n        Subject: '',\r\n        Description: '',\r\n        start : '',\r\n        dateend: ''\r\n    });\r\n\r\n    // leer los datos del formulario\r\n    const actualizarState = e => {\r\n        // Almacenar lo que el usuario escribe en el state\r\n        guardarCliente({\r\n            // obtener una copia del state actual\r\n            ...cliente, \r\n            [e.target.name] : e.target.value\r\n        })\r\n\r\n    }\r\n\r\n    // Añade en la REST API un cliente nuevo\r\n    const agregarCliente = e => {\r\n        e.preventDefault();\r\n\r\n        // enviar petición\r\n        clienteAxios.post('/clientes', cliente)\r\n            .then(res => {\r\n                // validar si hay errores de mongo \r\n                if(res.data.code === 11000) {\r\n                    Swal.fire({\r\n                        type: 'error',\r\n                        title: 'Hubo un error',\r\n                        text: 'Ese cliente ya esta registrado'\r\n                    })\r\n                } else {\r\n                    Swal.fire(\r\n                        'Se agregó el Cliente',\r\n                        res.data.mensaje,\r\n                        'success'\r\n                    )\r\n                }\r\n                // Redireccionar\r\n                history.push('/');\r\n            });\r\n    }\r\n\r\n    // Validar el formulario\r\n    const validarCliente = () => {\r\n        // Destructuring\r\n        const {Subject, Description, start, dateend, user} = cliente;\r\n\r\n        // revisar que las propiedades del state tengan contenido\r\n        let valido = !Subject.length || !Description.length || !start.length || !dateend.length;\r\n\r\n        // return true o false\r\n        return valido;\r\n    }\r\n\r\n    //asignar usuario\r\n    const asignar =e=>{\r\n\r\n        console.log(\"llego\")\r\n    }\r\n\r\n    // verificar si el usuario esta autenticado o no\r\n    if((localStorage.getItem('token') ==='' ) ) {\r\n        history.push('/iniciar-sesion');\r\n    }\r\n\r\n    const [foodState, setFoodState] = useState(\"\");\r\n\r\n    return (\r\n\r\n\r\n        <Fragment>\r\n            <h2>Nuevo Ticket</h2>\r\n            \r\n            <form\r\n                onSubmit={agregarCliente}\r\n            >\r\n                <legend>Llena todos los campos</legend>\r\n                <div className=\"campo\">\r\n                    <label>Subject:</label>\r\n                    <input  type=\"text\" \r\n                            placeholder=\"Subject\" \r\n                            name=\"Subject\"\r\n                            onChange={actualizarState}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"campo\">\r\n                    <label>Description:</label>\r\n                    <input type=\"text\" \r\n                          placeholder=\"Description\" \r\n                          name=\"Description\" \r\n                          onChange={actualizarState}\r\n                    />\r\n                </div>\r\n            \r\n                <div className=\"campo\">\r\n                    <label>date start:</label>\r\n                    <input type=\"date\" \r\n                          placeholder=\"Empresa Cliente\" \r\n                          name=\"start\" \r\n                          onChange={actualizarState}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"campo\">\r\n                    <label>date end:</label>\r\n                    <input type=\"date\" \r\n                            placeholder=\"Email Cliente\" \r\n                            name=\"dateend\" \r\n                            onChange={actualizarState}\r\n                    />\r\n                </div>\r\n\r\n           \r\n\r\n                <div className=\"campo left\">\r\n                    \r\n                  <label>Usuario:</label>\r\n                    <select\r\n                        className=\"campo\"\r\n                        name=\"user\"\r\n                        value=\"\"\r\n                        onChange={(e) => {\r\n                        const selectedFood = e.target.value;\r\n                        setFoodState(selectedFood);\r\n                        }}\r\n                    >\r\n                        \r\n                        <option value=\"1\">Steak</option>\r\n                        <option value=\"2\">Sandwich</option>\r\n                        <option value=\"3\">Dumpling</option>\r\n                    </select>\r\n\r\n                    <input className=\"right \"\r\n                        type=\"submit\"\r\n                        value=\"+\" \r\n                        disabled={ asignar() }\r\n                    />\r\n                  \r\n                </div>\r\n               \r\n               \r\n\r\n\r\n                <div className=\"enviar\">\r\n                    <input \r\n                        type=\"submit\" \r\n                        className=\"btn btn-azul\" \r\n                        value=\"Crear Ticket\" \r\n                        disabled={ validarCliente() }\r\n                    />\r\n                </div>\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n// HOC, es una función que toma un componente y retorna un nuevo componente\r\nexport default  withRouter(NuevoTicket);"]},"metadata":{},"sourceType":"module"}
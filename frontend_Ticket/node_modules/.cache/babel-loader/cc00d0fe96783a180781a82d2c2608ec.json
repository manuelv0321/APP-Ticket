{"ast":null,"code":"import _defineProperty from \"C:\\\\laragon\\\\www\\\\frontend_Ticket\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\laragon\\\\www\\\\frontend_Ticket\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\laragon\\\\www\\\\frontend_Ticket\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\laragon\\\\www\\\\frontend_Ticket\\\\src\\\\componentes\\\\Ticket\\\\Report.js\";\nimport React, { useEffect, useState, useContext, Fragment } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\n\nfunction Report() {\n  var _useState = useState({\n    start: '',\n    dateend: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      cliente = _useState2[0],\n      guardarCliente = _useState2[1];\n\n  var actualizarState = function actualizarState(e) {\n    // Almacenar lo que el usuario escribe en el state\n    guardarCliente(_objectSpread({}, cliente, _defineProperty({}, e.target.name, e.target.value)));\n  }; // Añade en la REST API un cliente nuevo\n\n\n  var agregarCliente = function agregarCliente(e) {\n    e.preventDefault();\n    var Ticket = {};\n    Ticket.cliente = cliente;\n    Ticket.Usuarios = users; // enviar petición\n\n    clienteAxios.post('/Tickets', Ticket, {\n      headers: {\n        Authorization: \"Bearer \".concat(localStorage.getItem('token'))\n      }\n    }).then(function (res) {\n      // validar si hay errores de mongo \n      if (res.data === 'No Autenticado, no hay JWT') {\n        Swal.fire({\n          type: 'error',\n          title: 'Hubo un error',\n          text: 'Token expirado o no existe'\n        });\n        history.push('/iniciar-sesion');\n      } else {\n        Swal.fire('Se agregó el Cliente', res.data.mensaje, 'success');\n      } // Redireccionar\n\n\n      history.push('/');\n    });\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Report\"), React.createElement(\"form\", {\n    onSubmit: agregarCliente,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"campo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"date start:\"), React.createElement(\"input\", {\n    type: \"date\",\n    placeholder: \"Empresa Cliente\",\n    name: \"start\",\n    onChange: actualizarState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"campo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"date end:\"), React.createElement(\"input\", {\n    type: \"date\",\n    placeholder: \"Email Cliente\",\n    name: \"dateend\",\n    onChange: actualizarState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }))));\n}\n\nexport default withRouter(Report);","map":{"version":3,"sources":["C:\\laragon\\www\\frontend_Ticket\\src\\componentes\\Ticket\\Report.js"],"names":["React","useEffect","useState","useContext","Fragment","Link","withRouter","Report","start","dateend","cliente","guardarCliente","actualizarState","e","target","name","value","agregarCliente","preventDefault","Ticket","Usuarios","users","clienteAxios","post","headers","Authorization","localStorage","getItem","then","res","data","Swal","fire","type","title","text","history","push","mensaje"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,EAAiDC,QAAjD,QAAiE,OAAjE;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;;AAEA,SAASC,MAAT,GAAkB;AAAA,kBAEmBL,QAAQ,CAAC;AACtCM,IAAAA,KAAK,EAAG,EAD8B;AAEtCC,IAAAA,OAAO,EAAE;AAF6B,GAAD,CAF3B;AAAA;AAAA,MAERC,OAFQ;AAAA,MAECC,cAFD;;AAOd,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,CAAC,EAAI;AACzB;AACAF,IAAAA,cAAc,mBAEPD,OAFO,sBAGTG,CAAC,CAACC,MAAF,CAASC,IAHA,EAGQF,CAAC,CAACC,MAAF,CAASE,KAHjB,GAAd;AAMH,GARD,CAPc,CAiBV;;;AACA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAJ,CAAC,EAAI;AACxBA,IAAAA,CAAC,CAACK,cAAF;AAGA,QAAIC,MAAM,GAAG,EAAb;AACAA,IAAAA,MAAM,CAACT,OAAP,GAAgBA,OAAhB;AACAS,IAAAA,MAAM,CAACC,QAAP,GAAkBC,KAAlB,CANwB,CAOxB;;AACAC,IAAAA,YAAY,CAACC,IAAb,CAAkB,UAAlB,EAA8BJ,MAA9B,EAAqC;AACjCK,MAAAA,OAAO,EAAE;AACLC,QAAAA,aAAa,mBAAaC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAb;AADR;AADwB,KAArC,EAKKC,IALL,CAKU,UAAAC,GAAG,EAAI;AACT;AACA,UAAGA,GAAG,CAACC,IAAJ,KAAY,4BAAf,EAA6C;AACzCC,QAAAA,IAAI,CAACC,IAAL,CAAU;AACNC,UAAAA,IAAI,EAAE,OADA;AAENC,UAAAA,KAAK,EAAE,eAFD;AAGNC,UAAAA,IAAI,EAAE;AAHA,SAAV;AAKAC,QAAAA,OAAO,CAACC,IAAR,CAAa,iBAAb;AACH,OAPD,MAOO;AACHN,QAAAA,IAAI,CAACC,IAAL,CACI,sBADJ,EAEIH,GAAG,CAACC,IAAJ,CAASQ,OAFb,EAGI,SAHJ;AAKH,OAfQ,CAgBT;;;AACAF,MAAAA,OAAO,CAACC,IAAR,CAAa,GAAb;AACH,KAvBL;AAwBH,GAhCD;;AAoCJ,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAII;AACI,IAAA,QAAQ,EAAEpB,cADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGA;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADR,EAEQ;AAAO,IAAA,IAAI,EAAC,MAAZ;AACM,IAAA,WAAW,EAAC,iBADlB;AAEM,IAAA,IAAI,EAAC,OAFX;AAGM,IAAA,QAAQ,EAAEL,eAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFR,CAHA,EAYI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI;AAAO,IAAA,IAAI,EAAC,MAAZ;AACQ,IAAA,WAAW,EAAC,eADpB;AAEQ,IAAA,IAAI,EAAC,SAFb;AAGQ,IAAA,QAAQ,EAAEA,eAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAZJ,CAJJ,CADJ;AAgCH;;AAED,eAAeN,UAAU,CAACC,MAAD,CAAzB","sourcesContent":["import React, { useEffect, useState, useContext, Fragment } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\nfunction Report() {\r\n\r\n    const[cliente, guardarCliente] = useState({      \r\n        start : '',\r\n        dateend: ''\r\n    });\r\n\r\n    const actualizarState = e => {\r\n        // Almacenar lo que el usuario escribe en el state\r\n        guardarCliente({\r\n            // obtener una copia del state actual\r\n            ...cliente, \r\n            [e.target.name] : e.target.value\r\n        })\r\n\r\n    }\r\n\r\n        // Añade en la REST API un cliente nuevo\r\n        const agregarCliente = e => {\r\n            e.preventDefault();\r\n    \r\n    \r\n            var Ticket = {};\r\n            Ticket.cliente =cliente;\r\n            Ticket.Usuarios = users; \r\n            // enviar petición\r\n            clienteAxios.post('/Tickets', Ticket,{\r\n                headers: {\r\n                    Authorization : `Bearer ${localStorage.getItem('token')}`\r\n                }\r\n            })\r\n                .then(res => {\r\n                    // validar si hay errores de mongo \r\n                    if(res.data ==='No Autenticado, no hay JWT') {\r\n                        Swal.fire({\r\n                            type: 'error',\r\n                            title: 'Hubo un error',\r\n                            text: 'Token expirado o no existe'\r\n                        })\r\n                        history.push('/iniciar-sesion');\r\n                    } else {\r\n                        Swal.fire(\r\n                            'Se agregó el Cliente',\r\n                            res.data.mensaje,\r\n                            'success'\r\n                        )\r\n                    }\r\n                    // Redireccionar\r\n                    history.push('/');\r\n                });\r\n        }\r\n    \r\n\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <h2>Report</h2>\r\n\r\n            <form\r\n                onSubmit={agregarCliente}\r\n            >\r\n            <div className=\"campo\">\r\n                    <label>date start:</label>\r\n                    <input type=\"date\" \r\n                          placeholder=\"Empresa Cliente\" \r\n                          name=\"start\" \r\n                          onChange={actualizarState}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"campo\">\r\n                    <label>date end:</label>\r\n                    <input type=\"date\" \r\n                            placeholder=\"Email Cliente\" \r\n                            name=\"dateend\" \r\n                            onChange={actualizarState}\r\n                    />\r\n                </div>\r\n\r\n            </form>\r\n\r\n        </Fragment>\r\n       \r\n     )\r\n\r\n}\r\n\r\nexport default withRouter(Report);"]},"metadata":{},"sourceType":"module"}